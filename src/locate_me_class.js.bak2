  
function CMorizLocateMe(user_options){
  
  var defaults = {  
                    'loki_key': false,
                    'gears_options': {},
                 };

  var self = this;
  this.options = mergeOptions(defaults, user_options);
  
  // sorting = priority!
  this.selected_methods  = ['Gears', 'Loki', 'W3C', 'MaxMind'];
  this.available_methods = {};
  
  this.results = [];
  this.success    = false;
  this.errors     = 0;
  this.user_abort = false;

  // // accessors
  // this.user_abort = function() {
  //   return user_abort;
  // };
  // 
  // this.success = function() {
  //   return success;
  // };
  // 
  // this.results = function() {
  //   return results;
  // };
  // 
  // this.result = function() {
  //   return results[0];
  // };
  // 
  // 
  //
  this.locate = function() {
    this.check_available_geolocation_methods();
    //alert(this.selected_methods);
    this.get_location();
  };
  
  // - determine available methods
  this.check_available_geolocation_methods = function() {
    for (var gmk in this.selected_methods) {
      var avm = false;
      gm = this.selected_methods[gmk];
      //console.log("provider: " + method);
      //console.log("result: "   + this.provider[method].available(this.options));
      avm = this.provider[gm].available(options);
      this.available_methods[gm] = avm;
    };
  };  
  
  // - trigger location request
  this.get_location = function() {
    for (var method in this.available_methods) {
      // FIXME multiple
      // if (success    != false) { break; }
      //if (user_abort == true)  { break; }

      if (this.available_methods[method] == false) { continue; }
      this.provider[method].locate(options);
    };
  }
  
  function mergeOptions(def, custom) {
    var result = def;

    for (var key in custom) {
      result[key] = custom[key];
    }
    
    return result;  
  };
};

function CMorizLocateMeProviders(){
}

// Loki.com 
function CMorizLocateMeProviderLoki() {
  var provider = 'Loki';
  var self = this;
  
  this.available = function() {
    var loki = false;
    console.log("Loki1");

    if ((typeof LokiAPI != 'undefined') && LokiAPI.isInstalled() && options['loki_key'] != false) {
      loki = true;
    }

    return loki;
  };
  
  this.locate = function() {
    console.log("Loki2");

    console.dir(this);
    
    // try {
      var loki = LokiAPI();
      loki.onSuccess = this.handle_result;
      loki.onFailure = this.handle_error;
      loki.setKey(options['loki_key']);
      loki.requestLocation(true, loki.NO_STREET_ADDRESS_LOOKUP);
    // } catch(e) {
    //   this.handle_error(e);
    // }
  };

  self.handle_result = function(position) {
    console.log("Loki2");
    var result = [];
    result['provider']  = provider;
    result['timestamp'] = (new Date).getTime();
    result['latitude']  = position['latitude'];
    result['longitude'] = position['longitude'];
    results.push(result);
    success = true;
  };
  
  this.handle_error = function(error, msg) {
    //errors++;
    
    // # 1001 - User denied location request
    if (error == 1001) {
      user_abort = true;
    }
  };
};




function CMorizLocateMeProvidersxx(){
  
  // Google Gears (Chrome & plugins for various platforms)
  //
  this.Gears = new function() {
    var provider = 'Gears';
    var self = this;
    
    this.available = function() {
      var gears = false;

      if (window.google && google.gears) {
        gears = true;
      }
      return gears;
    };

    this.locate = function() {
      alert("1");
      try {
        var geo = google.gears.factory.create('beta.geolocation');
        geo.getCurrentPosition(this.handle_result, this.handle_error, options['gears_options']);
      } catch(e) {
        this.handle_error(e);
      }
    };

    this.handle_result = function(position) {
      alert("okok");
      var result = [];
      result['provider']  = provider;
      result['timestamp'] = position['timestamp'];
      result['accuracy']  = position['accuracy'];
      result['latitude']  = position['coords']['latitude'];
      result['longitude'] = position['coords']['longitude'];
  
      console.dir(result);
      this.results.push(result);
      success = true;
    };
    
    this.handle_error = function(positionError) {
      //errors++;
      
      if (positionError.message) {
        if (positionError.message.match(/Page does not have permission to access location information using Google Gears/)) {
          user_abort = true;
        }
      }
    };

  };
  

  
  // Geolocation API Specification
  // http://dev.w3.org/geo/api/spec-source.html
  //
  // Firefox 3.x & Geode Plugin
  // Firefox 3.5 & Geode HUD Plugin
  // iPhone OS 3.0 Safari Mobile (beta)
  // Opera 10 beta (w Geo), currently Windows only (UNTESTED)
  //
  this.W3C = new function() {
    var provider = 'W3C';
    
    this.available = function() {
      var result = false;

      if (typeof navigator.geolocation != 'undefined') {
        result = true;
      }

      return result;
    };

    this.locate = function() {
      try {
        navigator.geolocation.getCurrentPosition(this.handle_result, this.handle_error);
      } catch(e) {
        this.handle_error(e);
      }
    };

    this.handle_result = function(position) {
      var result = [];
      result['provider']  = provider;
      result['timestamp'] = position['timestamp'];
      
      if (typeof position['coords'] != 'undefined') {
        result['latitude']  = position['coords']['latitude'];
        result['longitude'] = position['coords']['longitude'];
      } else {
        result['latitude']  = position['latitude'];
        result['longitude'] = position['longitude'];
      }
      this.results.push(result);
      success = true;
    };

    this.handle_error = function() {
      //errors++;
    };
  };
  
  // IP lookup against hostip.info - no ajax compatible way yet.
  // this.provider.hostip = new function() {
  //   //var url = 'http://api.hostip.info/get_html.php?position=true';
  //   
  //   this.available = function() { 
  //     return false;
  //   };
  //   
  //   this.locate = function() {
  //   };
  // 
  //   this.handle_result = function() {
  //   };
  // 
  //   this.handle_error = function() {
  //   };
  // };
  
  // IP lookup by MaxMind ajax
  // => http://www.kevinleary.net/smart-forms-geoip-location/
  // => http://www.maxmind.com/app/javascript_city
  this.MaxMind = new function() {
    var provider = "MaxMind";
    // var url = 'http://j.maxmind.com/app/geoip.js';
    
    this.available = function() { 
      return false;
    };
    
    this.locate = function() {
    };

    this.handle_result = function() {
    };

    this.handle_error = function() {
    }; 
  }

};

CMorizLocateMeProviders.prototype.Loki = new CMorizLocateMeProviderLoki();
CMorizLocateMe.prototype.provider = new CMorizLocateMeProviders();





// LocateMe.provider.hostip.available = function() {
//   return true; 
// };
// LocateMe.provider.hostip.locate = function() { 
//   var url = 'http://api.hostip.info/get_html.php?position=true&callback=?';
//   try {
//     $.get(url,'', this.handle_result, 'jsonp');
//   } catch(e) {
//     
//   };
// };
// 
// LocateMe.provider.hostip.handle_result = function(data, textStatus) { 
//   console.dir(data);
// };

function CMorizLocateMeProviderExtensionMaxMind() {
  var provider = "MaxMind";
  this.available = function() {
    return true; 
  };

  this.locate = function() { 
    var url = "http://j.maxmind.com/app/geoip.js"
    $.ajaxSetup({ 'cache' : true});
    $.getScript(url, this.handle_result);
  };

  this.handle_result = function() {
    var result = [];
    try {
      result['provider']    = provider;
      result['timestamp']   = position['timestamp'];
      result['county_name'] = geoip_country_name();
      result['county_code'] = geoip_country_code();
      result['city']        = geoip_country_city();
      result['region']      = geoip_region();
      result['region_name'] = geoip_region_name();
      result['postal_code'] = geoip_postal_code();
      result['latitude']    = geoip_latitude();
      result['longitude']   = geoip_longitude();
      results.push(result);
      success = true;
    } catch(e) {
      //errors++;
    }
  };
};


  var options = { 'loki_key' : 'localhost' };
  var LocateMe = new CMorizLocateMe(options);
  LocateMe.selected_methods  = ['Loki'];
  
  //CMorizLocateMe.prototype.provider = new CMorizLocateMeProviderExtensionMaxMind();

  // var LocateMe = new CMorizLocateMe(options);
  //   console.log(typeof LocateMe.provider);
  //   LocateMe.selected_methods  = ['MaxMind'];
  //   LocateMe.locate();
  
//LocateMe.locate();
//console.dir(LocateMe.selected_methods);
//console.dir(LocateMe.available_methods);
//console.dir(LocateMe.options);


